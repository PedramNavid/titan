# Path to your oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="spaceship"

if [ ! -f $HOME/.work-zshrc ]; then
  echo "no work zsh config found"
else
  source $HOME/.work-zshrc
fi

SPACESHIP_DOCKER_SHOW=false
SPACESHIP_KUBECONTEXT_SHOW=false
SPACESHIP_CHAR_SYMBOL="Î» "

plugins=(
  git
)

source $ZSH/oh-my-zsh.sh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

autoload -U promptinit; promptinit
prompt spaceship


alias v="nvim"

# Dotfiles utility functions
# If simply titan is called go to titan directory
# If called with apply then run ./bin/run.sh
titan() {
  if [ "$1" = "apply" ]; then
    pwd=$(pwd)
    cd ~/titan
    sh ./bin/run.sh
    cd "${pwd}"
  elif [ "$1" = "edit" ]; then
    cd ~/titan && v
  else
    cd ~/titan
  fi
}

# Tmux shenanigans
dv-react() {
  tmux has-session -t DVReact
  if [ $? != 0 ]
  then
    cd ~/Work/designView-react-polarisPlatform
    tmux new-session -s DVReact -n editor -d
    tmux send-keys -t DVReact 'v' C-m
    tmux new-window -t DVReact -n console
    tmux split-window -h -t DVReact:2
    tmux split-window -v -t DVReact:2.2
    tmux send-keys -t DVReact:2.1 'npm test' C-m
    tmux send-keys -t DVReact:2.2 'npm start' C-m
    tmux send-keys -t DVReact:2.3 'git st' C-m
  fi
  tmux attach -t DVReact:1
}

dv-node() {
  tmux has-session -t DVNode
  if [ $? != 0 ]
  then
    cd ~/Work/designView-react-polarisPlatform
    tmux new-session -s DVNode -n editor -d
    tmux send-keys -t DVNode 'v' C-m
    tmux new-window -t DVNode -n console
    tmux split-window -h -t DVNode:2
    tmux split-window -v -t DVNode:2.2
    tmux send-keys -t DVNode:2.1 'make test' C-m
    tmux send-keys -t DVNode:2.2 'make' C-m
    tmux send-keys -t DVNode:2.3 'git st' C-m
  fi
  tmux attach -t DVNode:1
}
